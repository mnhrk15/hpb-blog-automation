
## PROJECT OVERVIEW
This section provides a high-level overview of the project.  Further details can be found in the other sections of this document.  The project aims to automate blog post creation and publication for HotPepper Beauty.

## CODE STYLE
Adhere to PEP 8 style guidelines for Python code.  Further style guides may be added as needed.

## FOLDER ORGANIZATION
The project should follow a standard folder structure. Details on the specific structure will be added here as the project evolves.  A `docs` folder is confirmed to exist (as per `docs/requirements-definition.md` reference).

## TECH STACK
Python (version to be specified), Flask, Playwright, Google Gemini API.

## PROJECT-SPECIFIC STANDARDS
All implementations must strictly adhere to the requirements defined in `@requirements-definition.md`.  Thorough understanding of this document is mandatory before starting any implementation work.  The application must not attempt to circumvent HotPepper Beauty's robot detection mechanisms.  Generated content quality is not guaranteed; user review and editing are required.  Salon board IDs and passwords should only be used within the session and not stored.  The application should handle up to 4 image uploads.

## WORKFLOW & RELEASE RULES
Workflow and release rules will be detailed here as the project progresses.  A task list will be maintained in `todo.md`.  The application's handling of site specification changes is not guaranteed.

## REFERENCE EXAMPLES
Reference examples will be added to this section as needed.

## PROJECT DOCUMENTATION & CONTEXT SYSTEM
This project utilizes markdown files for documentation.  The `@requirements-definition.md` file is a critical component of the project and should be thoroughly reviewed.  `@global.mdc` is referenced as a location for task lists.

## DEBUGGING
Debugging strategies and best practices will be added here.  The application should gracefully handle robot detection and halt processing.

## FINAL DOs AND DON'Ts
- DO: Carefully read and understand `@requirements-definition.md` before starting any coding.
- DON'T: Begin coding without a complete understanding of the requirements.
- DO: Ensure all generated content is reviewed and edited before posting.
- DON'T: Attempt to circumvent HotPepper Beauty's robot detection.
- DO: Use the provided template functionality for consistent blog post structure.
- DON'T: Persistently store salon board IDs and passwords.